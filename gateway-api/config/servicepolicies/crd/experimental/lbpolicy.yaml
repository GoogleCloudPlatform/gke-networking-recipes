apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (unknown)
  creationTimestamp: null
  name: lbpolicies.networking.gke.io
spec:
  group: networking.gke.io
  names:
    kind: LBPolicy
    listKind: LBPolicyList
    plural: lbpolicies
    singular: lbpolicy
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LBPolicy provides a way to apply LoadBalancer policy configuration
          with the GKE implementation of the Gateway API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of LBPolicy.
            properties:
              default:
                description: Default defines default policy configuration for the
                  targeted resource.
                properties:
                  connectionDrainingTimeoutSec:
                    description: ConnectionDraningTimeoutSec is a BackendService parameter.
                      It is used during removal of VMs from instance groups. This
                      guarantees that for the specified time all existing connections
                      to a VM will remain untouched, but no new connections will be
                      accepted. Set timeout to zero to disable connection draining.
                      Enable the feature by specifying a timeout of up to one hour.
                      If the flag is omitted, a default value (0s) will be used. See
                      https://cloud.google.com/compute/docs/reference/rest/v1/backendServices
                    format: int64
                    maximum: 3600
                    minimum: 0
                    type: integer
                  healthCheck:
                    description: HealthCheckConfig contains configuration for the
                      health check.
                    properties:
                      checkIntervalSec:
                        description: CheckIntervalSec is a health check parameter.
                          See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks.
                        format: int64
                        minimum: 0
                        type: integer
                      healthyThreshold:
                        description: HealthyThreshold is a health check parameter.
                          See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks.
                        format: int64
                        minimum: 0
                        type: integer
                      port:
                        description: Port is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks.
                          If Port is used, the controller updates portSpecification
                          as well
                        format: int64
                        maximum: 65535
                        minimum: 1
                        type: integer
                      requestPath:
                        description: RequestPath is a health check parameter. See
                          https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks.
                        maxLength: 1024
                        minLength: 1
                        type: string
                      timeoutSec:
                        description: TimeoutSec is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks.
                          Must be less than CheckIntervalSec
                        format: int64
                        minimum: 0
                        type: integer
                      type:
                        description: Type is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks.
                        enum:
                        - HTTP
                        - HTTPS
                        - HTTP2
                        type: string
                      unhealthyThreshold:
                        description: UnhealthyThreshold is a health check parameter.
                          See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks.
                        format: int64
                        minimum: 0
                        type: integer
                    type: object
                  logging:
                    description: LoggingConfig contains configuration for logging.
                    properties:
                      disable:
                        description: This field denotes whether to enable logging
                          for the load balancer traffic served by this backend service.
                        type: boolean
                      sampleRate:
                        description: This field can only be specified if logging is
                          enabled for this backend service. The value of the field
                          must be in range [0, 1e6]. This configures the sampling
                          rate of requests to the load balancer where 1e6 means all
                          logged requests are reported and 0 means no logged requests
                          are reported. The default value is 1e6.
                        format: int32
                        maximum: 1000000
                        minimum: 0
                        type: integer
                    type: object
                  sessionAffinity:
                    description: SessionAffinityConfig contains configuration for
                      stickiness parameters.
                    properties:
                      affinityCookieTtlSec:
                        format: int64
                        maximum: 86400
                        minimum: 0
                        type: integer
                      affinityType:
                        enum:
                        - CLIENT_IP
                        - CLIENT_IP_PORT_PROTO
                        - CLIENT_IP_PROTO
                        - GENERATED_COOKIE
                        - HEADER_FIELD
                        - HTTP_COOKIE
                        - NONE
                        type: string
                    type: object
                  timeoutSec:
                    description: TimeoutSec is a BackendService parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/backendServices
                    format: int64
                    maximum: 2147483647
                    minimum: 1
                    type: integer
                type: object
              targetRef:
                description: TargetRef identifies an API object to apply policy to.
                properties:
                  group:
                    description: Group is the group of the target resource.
                    maxLength: 253
                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  kind:
                    description: Kind is kind of the target resource.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    type: string
                  name:
                    description: Name is the name of the target resource.
                    maxLength: 253
                    minLength: 1
                    type: string
                  namespace:
                    description: Namespace is the namespace of the referent. When
                      unspecified, the local namespace is inferred. Even when policy
                      targets a resource in a different namespace, it MUST only apply
                      to traffic originating from the same namespace as the policy.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                required:
                - group
                - kind
                - name
                type: object
            required:
            - targetRef
            type: object
          status:
            description: Status defines the current state of LBPolicy.
            properties:
              conditions:
                description: Conditions describe the current conditions of the LBPolicy.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
